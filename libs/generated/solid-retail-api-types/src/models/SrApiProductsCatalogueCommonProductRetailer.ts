/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * 
 * @export
 */
export const SrApiProductsCatalogueCommonProductRetailer = {
    Amazon: 'Amazon',
    Walmart: 'Walmart',
    BestBuy: 'BestBuy',
    Target: 'Target',
    HomeDepot: 'HomeDepot',
    Lowes: 'Lowes',
    Costco: 'Costco',
    Ikea: 'Ikea',
    Wayfair: 'Wayfair',
    BedBathAndBeyond: 'BedBathAndBeyond',
    Macys: 'Macys',
    Kohls: 'Kohls',
    Sears: 'Sears',
    JcPenney: 'JCPenney',
    SamsClub: 'SamsClub',
    Bjs: 'BJs',
    Aldi: 'Aldi',
    Lidl: 'Lidl',
    WholeFoods: 'WholeFoods',
    TraderJoes: 'TraderJoes',
    Kroger: 'Kroger',
    Safeway: 'Safeway',
    Albertsons: 'Albertsons',
    Publix: 'Publix',
    Heb: 'HEB',
    Meijer: 'Meijer',
    GiantEagle: 'GiantEagle',
    StopAndShop: 'StopAndShop',
    HyVee: 'HyVee',
    Wegmans: 'Wegmans',
    Hannaford: 'Hannaford',
    GiantFood: 'GiantFood',
    FoodLion: 'FoodLion',
    WinCoFoods: 'WinCoFoods',
    ShopRite: 'ShopRite',
    WeisMarkets: 'WeisMarkets',
    PriceChopper: 'PriceChopper',
    TopsMarkets: 'TopsMarkets',
    AcmeMarkets: 'AcmeMarkets',
    MarketBasket: 'MarketBasket',
    PigglyWiggly: 'PigglyWiggly',
    Food4Less: 'Food4Less',
    SaveALot: 'SaveALot',
    SaveMart: 'SaveMart',
    StaterBros: 'StaterBros',
    FoodCity: 'FoodCity',
    InglesMarkets: 'InglesMarkets',
    BrookshireBrothers: 'BrookshireBrothers',
    BigY: 'BigY',
    GiantFoodStores: 'GiantFoodStores',
    Giant: 'Giant',
    FoodBazaar: 'FoodBazaar',
    FoodMaxx: 'FoodMaxx',
    VallartaSupermarkets: 'VallartaSupermarkets',
    CardenasMarkets: 'CardenasMarkets',
    ElSuper: 'ElSuper',
    NorthgateMarket: 'NorthgateMarket',
    SuperiorGrocers: 'SuperiorGrocers',
    FiestaMart: 'FiestaMart',
    MiPueblo: 'MiPueblo',
    FoodTown: 'FoodTown',
    FoodFair: 'FoodFair',
    FoodDepot: 'FoodDepot',
    FoodLand: 'FoodLand',
    FoodBasics: 'FoodBasics',
    FoodEmp: 'FoodEmp'
} as const;
export type SrApiProductsCatalogueCommonProductRetailer = typeof SrApiProductsCatalogueCommonProductRetailer[keyof typeof SrApiProductsCatalogueCommonProductRetailer];


export function SrApiProductsCatalogueCommonProductRetailerFromJSON(json: any): SrApiProductsCatalogueCommonProductRetailer {
    return SrApiProductsCatalogueCommonProductRetailerFromJSONTyped(json, false);
}

export function SrApiProductsCatalogueCommonProductRetailerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SrApiProductsCatalogueCommonProductRetailer {
    return json as SrApiProductsCatalogueCommonProductRetailer;
}

export function SrApiProductsCatalogueCommonProductRetailerToJSON(value?: SrApiProductsCatalogueCommonProductRetailer | null): any {
    return value as any;
}

