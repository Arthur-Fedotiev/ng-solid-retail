/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
} from './Category';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
} from './Price';

import {
     CreateBookRequestFromJSONTyped,
     CreateClothingRequestFromJSONTyped,
     CreateShoesRequestFromJSONTyped
} from './';

/**
 * 
 * @export
 * @interface CreateProductRequest
 */
export interface CreateProductRequest {
    /**
     * 
     * @type {Category}
     * @memberof CreateProductRequest
     */
    category: Category;
    /**
     * 
     * @type {string}
     * @memberof CreateProductRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateProductRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateProductRequest
     */
    sKU?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CreateProductRequest
     */
    url?: string | null;
    /**
     * 
     * @type {Array<Price>}
     * @memberof CreateProductRequest
     */
    prices?: Array<Price> | null;
}

/**
 * Check if a given object implements the CreateProductRequest interface.
 */
export function instanceOfCreateProductRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "category" in value;

    return isInstance;
}

export function CreateProductRequestFromJSON(json: any): CreateProductRequest {
    return CreateProductRequestFromJSONTyped(json, false);
}

export function CreateProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateProductRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['category'] === 'CreateBookRequest') {
            return CreateBookRequestFromJSONTyped(json, true);
        }
        if (json['category'] === 'CreateClothingRequest') {
            return CreateClothingRequestFromJSONTyped(json, true);
        }
        if (json['category'] === 'CreateShoesRequest') {
            return CreateShoesRequestFromJSONTyped(json, true);
        }
    }
    return {
        
        'category': CategoryFromJSON(json['Category']),
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'sKU': !exists(json, 'SKU') ? undefined : json['SKU'],
        'url': !exists(json, 'Url') ? undefined : json['Url'],
        'prices': !exists(json, 'Prices') ? undefined : (json['Prices'] === null ? null : (json['Prices'] as Array<any>).map(PriceFromJSON)),
    };
}

export function CreateProductRequestToJSON(value?: CreateProductRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Category': CategoryToJSON(value.category),
        'Name': value.name,
        'Description': value.description,
        'SKU': value.sKU,
        'Url': value.url,
        'Prices': value.prices === undefined ? undefined : (value.prices === null ? null : (value.prices as Array<any>).map(PriceToJSON)),
    };
}

