/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SrApiProductsCatalogueCommonProductCategory } from './SrApiProductsCatalogueCommonProductCategory';
import {
    SrApiProductsCatalogueCommonProductCategoryFromJSON,
    SrApiProductsCatalogueCommonProductCategoryFromJSONTyped,
    SrApiProductsCatalogueCommonProductCategoryToJSON,
} from './SrApiProductsCatalogueCommonProductCategory';
import type { SrApiProductsCatalogueCommonProductRetailer } from './SrApiProductsCatalogueCommonProductRetailer';
import {
    SrApiProductsCatalogueCommonProductRetailerFromJSON,
    SrApiProductsCatalogueCommonProductRetailerFromJSONTyped,
    SrApiProductsCatalogueCommonProductRetailerToJSON,
} from './SrApiProductsCatalogueCommonProductRetailer';
import type { SrApiProductsCatalogueContractsCommonBookSpecificationRequest } from './SrApiProductsCatalogueContractsCommonBookSpecificationRequest';
import {
    SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSON,
    SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSONTyped,
    SrApiProductsCatalogueContractsCommonBookSpecificationRequestToJSON,
} from './SrApiProductsCatalogueContractsCommonBookSpecificationRequest';
import type { SrApiProductsCatalogueContractsUpdateProductPrice } from './SrApiProductsCatalogueContractsUpdateProductPrice';
import {
    SrApiProductsCatalogueContractsUpdateProductPriceFromJSON,
    SrApiProductsCatalogueContractsUpdateProductPriceFromJSONTyped,
    SrApiProductsCatalogueContractsUpdateProductPriceToJSON,
} from './SrApiProductsCatalogueContractsUpdateProductPrice';

/**
 * 
 * @export
 * @interface SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
 */
export interface SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest {
    /**
     * 
     * @type {SrApiProductsCatalogueContractsCommonBookSpecificationRequest}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    specifications: SrApiProductsCatalogueContractsCommonBookSpecificationRequest;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    sKU: string;
    /**
     * 
     * @type {SrApiProductsCatalogueCommonProductRetailer}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    retailer: SrApiProductsCatalogueCommonProductRetailer;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    url: string;
    /**
     * 
     * @type {SrApiProductsCatalogueCommonProductCategory}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    category: SrApiProductsCatalogueCommonProductCategory;
    /**
     * 
     * @type {Array<SrApiProductsCatalogueContractsUpdateProductPrice>}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest
     */
    prices: Array<SrApiProductsCatalogueContractsUpdateProductPrice>;
}

/**
 * Check if a given object implements the SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest interface.
 */
export function instanceOfSrApiProductsCatalogueContractsUpdateProductUpdateBookRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "specifications" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "sKU" in value;
    isInstance = isInstance && "retailer" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "prices" in value;

    return isInstance;
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateBookRequestFromJSON(json: any): SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest {
    return SrApiProductsCatalogueContractsUpdateProductUpdateBookRequestFromJSONTyped(json, false);
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateBookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'specifications': SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSON(json['Specifications']),
        'id': json['Id'],
        'name': json['Name'],
        'description': json['Description'],
        'sKU': json['SKU'],
        'retailer': SrApiProductsCatalogueCommonProductRetailerFromJSON(json['Retailer']),
        'url': json['Url'],
        'category': SrApiProductsCatalogueCommonProductCategoryFromJSON(json['Category']),
        'prices': ((json['Prices'] as Array<any>).map(SrApiProductsCatalogueContractsUpdateProductPriceFromJSON)),
    };
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateBookRequestToJSON(value?: SrApiProductsCatalogueContractsUpdateProductUpdateBookRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Specifications': SrApiProductsCatalogueContractsCommonBookSpecificationRequestToJSON(value.specifications),
        'Id': value.id,
        'Name': value.name,
        'Description': value.description,
        'SKU': value.sKU,
        'Retailer': SrApiProductsCatalogueCommonProductRetailerToJSON(value.retailer),
        'Url': value.url,
        'Category': SrApiProductsCatalogueCommonProductCategoryToJSON(value.category),
        'Prices': ((value.prices as Array<any>).map(SrApiProductsCatalogueContractsUpdateProductPriceToJSON)),
    };
}

