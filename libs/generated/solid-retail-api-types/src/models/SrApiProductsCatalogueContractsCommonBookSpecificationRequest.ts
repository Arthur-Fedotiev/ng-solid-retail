/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SrApiProductsCatalogueContractsCommonBookSpecificationRequest
 */
export interface SrApiProductsCatalogueContractsCommonBookSpecificationRequest {
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsCommonBookSpecificationRequest
     */
    cover: string;
}

/**
 * Check if a given object implements the SrApiProductsCatalogueContractsCommonBookSpecificationRequest interface.
 */
export function instanceOfSrApiProductsCatalogueContractsCommonBookSpecificationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cover" in value;

    return isInstance;
}

export function SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSON(json: any): SrApiProductsCatalogueContractsCommonBookSpecificationRequest {
    return SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSONTyped(json, false);
}

export function SrApiProductsCatalogueContractsCommonBookSpecificationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SrApiProductsCatalogueContractsCommonBookSpecificationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cover': json['cover'],
    };
}

export function SrApiProductsCatalogueContractsCommonBookSpecificationRequestToJSON(value?: SrApiProductsCatalogueContractsCommonBookSpecificationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cover': value.cover,
    };
}

