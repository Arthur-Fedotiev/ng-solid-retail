/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    MicrosoftAspNetCoreHttpHttpValidationProblemDetails,
    instanceOfMicrosoftAspNetCoreHttpHttpValidationProblemDetails,
    MicrosoftAspNetCoreHttpHttpValidationProblemDetailsFromJSON,
    MicrosoftAspNetCoreHttpHttpValidationProblemDetailsFromJSONTyped,
    MicrosoftAspNetCoreHttpHttpValidationProblemDetailsToJSON,
} from './MicrosoftAspNetCoreHttpHttpValidationProblemDetails';
import {
    MicrosoftAspNetCoreMvcProblemDetails,
    instanceOfMicrosoftAspNetCoreMvcProblemDetails,
    MicrosoftAspNetCoreMvcProblemDetailsFromJSON,
    MicrosoftAspNetCoreMvcProblemDetailsFromJSONTyped,
    MicrosoftAspNetCoreMvcProblemDetailsToJSON,
} from './MicrosoftAspNetCoreMvcProblemDetails';

/**
 * @type ApiV1CatalogueGet500Response
 * 
 * @export
 */
export type ApiV1CatalogueGet500Response = MicrosoftAspNetCoreHttpHttpValidationProblemDetails | MicrosoftAspNetCoreMvcProblemDetails;

export function ApiV1CatalogueGet500ResponseFromJSON(json: any): ApiV1CatalogueGet500Response {
    return ApiV1CatalogueGet500ResponseFromJSONTyped(json, false);
}

export function ApiV1CatalogueGet500ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiV1CatalogueGet500Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return { ...MicrosoftAspNetCoreHttpHttpValidationProblemDetailsFromJSONTyped(json, true), ...MicrosoftAspNetCoreMvcProblemDetailsFromJSONTyped(json, true) };
}

export function ApiV1CatalogueGet500ResponseToJSON(value?: ApiV1CatalogueGet500Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    if (instanceOfMicrosoftAspNetCoreHttpHttpValidationProblemDetails(value)) {
        return MicrosoftAspNetCoreHttpHttpValidationProblemDetailsToJSON(value as MicrosoftAspNetCoreHttpHttpValidationProblemDetails);
    }
    if (instanceOfMicrosoftAspNetCoreMvcProblemDetails(value)) {
        return MicrosoftAspNetCoreMvcProblemDetailsToJSON(value as MicrosoftAspNetCoreMvcProblemDetails);
    }

    return {};
}

