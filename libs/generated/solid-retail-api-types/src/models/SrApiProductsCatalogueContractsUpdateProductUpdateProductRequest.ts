/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SrApiProductsCatalogueCommonProductCategory } from './SrApiProductsCatalogueCommonProductCategory';
import {
    SrApiProductsCatalogueCommonProductCategoryFromJSON,
    SrApiProductsCatalogueCommonProductCategoryFromJSONTyped,
    SrApiProductsCatalogueCommonProductCategoryToJSON,
} from './SrApiProductsCatalogueCommonProductCategory';
import type { SrApiProductsCatalogueCommonProductRetailer } from './SrApiProductsCatalogueCommonProductRetailer';
import {
    SrApiProductsCatalogueCommonProductRetailerFromJSON,
    SrApiProductsCatalogueCommonProductRetailerFromJSONTyped,
    SrApiProductsCatalogueCommonProductRetailerToJSON,
} from './SrApiProductsCatalogueCommonProductRetailer';
import type { SrApiProductsCatalogueContractsUpdateProductPrice } from './SrApiProductsCatalogueContractsUpdateProductPrice';
import {
    SrApiProductsCatalogueContractsUpdateProductPriceFromJSON,
    SrApiProductsCatalogueContractsUpdateProductPriceFromJSONTyped,
    SrApiProductsCatalogueContractsUpdateProductPriceToJSON,
} from './SrApiProductsCatalogueContractsUpdateProductPrice';

/**
 * 
 * @export
 * @interface SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
 */
export interface SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest {
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    sKU?: string | null;
    /**
     * 
     * @type {SrApiProductsCatalogueCommonProductRetailer}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    retailer?: SrApiProductsCatalogueCommonProductRetailer;
    /**
     * 
     * @type {string}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    url?: string | null;
    /**
     * 
     * @type {SrApiProductsCatalogueCommonProductCategory}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    category?: SrApiProductsCatalogueCommonProductCategory;
    /**
     * 
     * @type {Array<SrApiProductsCatalogueContractsUpdateProductPrice>}
     * @memberof SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest
     */
    prices?: Array<SrApiProductsCatalogueContractsUpdateProductPrice> | null;
}

/**
 * Check if a given object implements the SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest interface.
 */
export function instanceOfSrApiProductsCatalogueContractsUpdateProductUpdateProductRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateProductRequestFromJSON(json: any): SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest {
    return SrApiProductsCatalogueContractsUpdateProductUpdateProductRequestFromJSONTyped(json, false);
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'sKU': !exists(json, 'SKU') ? undefined : json['SKU'],
        'retailer': !exists(json, 'Retailer') ? undefined : SrApiProductsCatalogueCommonProductRetailerFromJSON(json['Retailer']),
        'url': !exists(json, 'Url') ? undefined : json['Url'],
        'category': !exists(json, 'Category') ? undefined : SrApiProductsCatalogueCommonProductCategoryFromJSON(json['Category']),
        'prices': !exists(json, 'Prices') ? undefined : (json['Prices'] === null ? null : (json['Prices'] as Array<any>).map(SrApiProductsCatalogueContractsUpdateProductPriceFromJSON)),
    };
}

export function SrApiProductsCatalogueContractsUpdateProductUpdateProductRequestToJSON(value?: SrApiProductsCatalogueContractsUpdateProductUpdateProductRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Description': value.description,
        'SKU': value.sKU,
        'Retailer': SrApiProductsCatalogueCommonProductRetailerToJSON(value.retailer),
        'Url': value.url,
        'Category': SrApiProductsCatalogueCommonProductCategoryToJSON(value.category),
        'Prices': value.prices === undefined ? undefined : (value.prices === null ? null : (value.prices as Array<any>).map(SrApiProductsCatalogueContractsUpdateProductPriceToJSON)),
    };
}

