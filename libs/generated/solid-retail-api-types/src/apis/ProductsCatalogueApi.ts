/* tslint:disable */
/* eslint-disable */
/**
 * SOLID Retail API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1CataloguePost201Response,
  ApiV1CataloguePostRequest,
} from '../models';
import {
    ApiV1CataloguePost201ResponseFromJSON,
    ApiV1CataloguePost201ResponseToJSON,
    ApiV1CataloguePostRequestFromJSON,
    ApiV1CataloguePostRequestToJSON,
} from '../models';

export interface ApiV1CataloguePostOperationRequest {
    apiV1CataloguePostRequest?: ApiV1CataloguePostRequest;
}

/**
 * 
 */
export class ProductsCatalogueApi extends runtime.BaseAPI {

    /**
     */
    async apiV1CataloguePostRaw(requestParameters: ApiV1CataloguePostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiV1CataloguePost201Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/v1/catalogue`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1CataloguePostRequestToJSON(requestParameters.apiV1CataloguePostRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ApiV1CataloguePost201ResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiV1CataloguePost(requestParameters: ApiV1CataloguePostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiV1CataloguePost201Response> {
        const response = await this.apiV1CataloguePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
